<?xml version="1.0" encoding="UTF-8"?>
<elasticMapper name="diagnose">
    <!--property配置字段映射信息
        sourceName：源字段名称
        targetName: 目标字段名称
        convert： 是否进行转换， 如果true, 则将通过调用方法或者动态执行sql获取转换后的值
        valueType: 字段数据类型，
        dicType: 字典类型   com.example.demo.core.dics 包下的类路径
        -->
    <property sourceName="diag_id"  targetName="Diag_Id" convert="false" valueType="java.lang.String" idField="true"></property>
    <property sourceName="diag_admid" targetName="Diag_AdmId"  convert="false" valueType="java.lang.String" parentField="true"></property>
    <property sourceName="diag_regno" targetName="Diag_RegNo"  convert="false" valueType="java.lang.String" routingField="true"></property>
    <property sourceName="diag_date" targetName="Diag_Time"  convert="true" valueType="java.lang.String">
        <!--concatDatatime转换方法 支持两个参数， 默认第一个参数为sourceName， 第二个参数为parameter中字段的值-->
        <method>concatDatatime</method>
        <parameter>diag_time</parameter>
    </property>
    <property sourceName="diag_type_code" targetName="Diag_Type" convert="true" valueType="java.lang.String">
        <dicType>com.example.demo.core.dics.DiagnoseType</dicType>
        <method>getByCode</method>
        <parameter type="java.lang.String">diag_type_code</parameter>
    </property>
    <!--诊断名称  通过编码获取-->
    <property sourceName="diag_name" targetName="Diag_Name"  convert="true" valueType="java.lang.String">
        <!--dicType： 字典类型，如果设置会覆盖属性中的dicType-->
        <dicType>com.example.demo.core.dics.DiagnoseName</dicType>
        <method>getByCode</method>
        <!--如果参数名称和原字段不同, 则默认先使用原字段名称, 如果不存在,在根据参数字段做转换-->
        <parameter type="java.lang.String">diag_code</parameter>
    </property>
    <!--诊断编码-->
    <property sourceName="diag_code" targetName="Diag_Code "  convert="false" valueType="java.lang.String"></property>
    <!--诊断顺位-->
    <property sourceName="diag_no" targetName="Diag_No" convert="false" valueType="java.lang.String"></property>
</elasticMapper>