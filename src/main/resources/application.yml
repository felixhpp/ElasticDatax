server:
  port: 8160
  tomcat:
    max-http-post-size: 100MB
  # 下面是配置undertow作为服务器的参数
#    undertow:
#      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
#      io-threads: 2
#      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
#      worker-threads: 20
#      # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
#      # 每块buffer的空间大小,越小的空间被利用越充分
#      buffer-size: 1024
#      # 是否分配的直接内存
#      direct-buffers: true
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.example.demo.mapper
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

## 数据库连接
spring:
  profiles:
    active: dev
  servlet:
    multipart:
      max-request-size: 100MB
      max-file-size: 100MB
  freemarker:
    template-loader-path: classpath:/templates/
    suffix: .html
    cache: true
    charset: utf-8
    check-template-location: true
    content-type: text/html
    prefix:
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    check-template: true
    suffix: .html
    encoding: utf-8
    servlet:
      content-type: text/html
    mode: HTML5
  resources:
    static-locations: classpath:/static/
  mvc:
    view:
      prefix: classpath:/templates/
      suffix: .html
    static-path-pattern: /**
    throw-exception-if-no-handler-found: true   #出现错误时, 直接抛出异常(便于异常统一处理，否则捕获不到404)
    #不要为我们工程中的资源文件建立映射
    resources:
      add-mappings: false
  datasource:
    ## 主数据库信息
    primary:
      # 数据库访问配置, 使用druid数据源
      type: com.alibaba.druid.pool.DruidDataSource
      username: root
      password: 123456
      url: jdbc:mysql://localhost:3316/jobs?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC
      driver-class-name: com.mysql.cj.jdbc.Driver
      # 连接池配置
      initialSize: 5    # 初始化大小，最小，最大
      minIdle: 5
      maxActive: 20
      maxWait: 60000  # 配置获取连接等待超时的时间
      timeBetweenEvictionRunsMillis: 60000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      validation-query: select 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-open-prepared-statements: 20
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters, 去掉后监控界面sql无法统计, 'wall'用于防火墙
      filters: stat,wall
      # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
      aop-patterns: com.springboot.servie.*
    ## Cache 数据库信息
    cache:
      # 数据库访问配置, 使用druid数据源发布后报错， 暂时先使用hikari
      type: com.alibaba.druid.pool.DruidDataSource
      username: _system
      password: sysmdm
      url: jdbc:Cache://192.178.61.120:1972/mdm
      driver-class-name: com.intersys.jdbc.CacheDriver
      # 连接池配置
      initialSize: 5    # 初始化大小，最小，最大
      minIdle: 5
      maxActive: 20
      maxWait: 60000  # 配置获取连接等待超时的时间
      timeBetweenEvictionRunsMillis: 60000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      validation-query: select 'x'
      # cache 不支持缓存、sql防火墙等功能
  ## 缓存
  cache:
    ehcache:
      config: classpath:/ehcache.xml
#    type: jcache
#    jcache:
#      config: classpath:/ehcache.xml
  ## Elasticsearch配置信息
  elasticsearch:
    bulk: 2000
    username: ""
    password: ""
    cluster:
      name: "elasticsearch"
    ip: 127.0.0.1
    port: 9300
    pool: 100
    connection-timeout: 20000 #连接超时
    max-connect-total: 50
    max-connect-per-route: 10
    connection-request-timeout-millis: 500
    socket-timeout-millis: 30000
    connect-timeout-millis: 1000
    jest:
      uris:
        - http://127.0.0.1:9200
      username: jobs
      password: changeme
      read-timeout: 20000 #读取超时
      connection-timeout: 20000 #连接超时

  path:
    logs: /logs
    uploadPath: /upload   #文件上次目录
    templatePath: /upload/tmp #文件临时目录
    uploaderPath: /uploadPath/file #文件存放地址
  logging:
    config: classpath:log4j2-spring.xml
  system:
    version: 1
elastic-mapper:
  onMapper: true
  onCache: true  # 系统启动时预先缓存字典类型

management:
    health:
      elasticsearch:
        enabled: false

